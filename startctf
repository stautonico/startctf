#!/usr/bin/env python3
import os

import requests

from startctfutil import __version__
from startctfutil.arg_parser import parse_args, get_arg, run
from startctfutil.commands import load_commands
from startctfutil.config import init_config
from startctfutil.io import info, success, warn, error


# Import all the tools here so their arguments are added to the parser
# for category in SUPPORTED_TOOLS:
#     for tool in SUPPORTED_TOOLS[category]:
#         importlib.import_module(f"startctfutil.tools.{tool}")

def install_manpage_handler():
    if os.geteuid() != 0:
        error("You must be root to install the manpage. Try running with sudo.")
        exit(1)
    else:
        info("Downloading manpage...")
        r = requests.get("http://raw.githubusercontent.com/stautonico/startctf/main/man/startctf.1")
        if r.status_code != 200:
            error(f"Failed to download manpage. Please try again later. (Status code: {r.status_code})")
            exit(1)
        else:
            if not os.path.exists("/usr/share/man/man1"):
                error("Manpage directory not found. Please open an issue on GitHub.")
                exit(1)
            else:
                import gzip
                # Gzip the manpage and write it to the manpage directory
                with open("/usr/share/man/man1/startctf.1.gz", "wb") as f:
                    f.write(gzip.compress(r.text.encode()))
                success("Manpage installed successfully!")
                exit(0)

def init_config_handler():
    if 

def main():
    load_commands()
    parse_args()
    init_config()
    # We have to import this after the config is initialized (because otherwise it'll be None)
    from startctfutil.config import CONFIG_VERSION

    if CONFIG_VERSION != __version__ and CONFIG_VERSION is not None:
        warn(
            f"Config version is {CONFIG_VERSION}, but the current version is {__version__}. Please run 'startctf --update-config' to update the config.")

    if get_arg("install_manpage"):
        install_manpage_handler()

    if get_arg("init_config"):
        init_config_handler()


    run()  # Run the command passed to argparse

    # TODO: Figure out how to add arguments from a tool into the `start/new` script
    # TODO: Add ability to use rustscan instead of nmap
    # TODO: Use type hints everywhere
    # TODO: Add --init-config option to create a config file with default values (optional --path argument)
    # TODO: Use translations file for all user-facing strings (i18n)
    # TODO: Include autocompletions for bash and zsh
    # TODO: Write github actions to automatically build and upload to pypi


if __name__ == '__main__':
    main()
